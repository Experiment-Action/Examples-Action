name: run test cases

on: 
  pull_request_target:
  issue_comment:
    types: [created, edited]

# github.head_ref is only defined on pull_request events
concurrency:
  group: ${{ github.workflow }}-${{ github.actor }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:

  macOS-RunTestCases:
    if: |
      contains(github.event.pull_request.body, '[X] needs automatic test cases check') ||
      contains(github.event.comment.body, '@cocos-robot run test cases')
    runs-on: self-hosted-mac

    steps:
#       - name: Checkout test-projects
#         uses: actions/checkout@v3
#         with:
#           repository: cocos/cocos-test-projects
#           fetch-depth: 0
#           ref: v3.7
#           path: ../../cocos-test-projects
#       - name: Checkout test-projects
#         shell: bash
#         run: |
#           set -x
#           VERSION="v3.7.3"
#           AUTOTEST_VERSION='expr substr $VERSION 1 5'
#           TEST_PROJECTS_EXTERNAL="../../cocos-test-projects"
#           CCTEST_PLUGINS="../../TestAction/EXTENSIONS_DOWNLOAD"
#           if [ ! -d $TEST_PROJECTS_EXTERNAL ]; then
#               mkdir -p $TEST_PROJECTS_EXTERNAL
#               git clone https://github.com/cocos/cocos-test-projects.git $PRECLONE_EXTERNAL
#           else
#               echo "directory $TEST_PROJECTS_EXTERNAL is ready"
#           fi
#           git -C $TEST_PROJECTS_EXTERNAL reset --hard
#           git -C $TEST_PROJECTS_EXTERNAL fetch --all --prune
#           git -C $TEST_PROJECTS_EXTERNAL checkout origin/$AUTOTEST_VERSION
#           git -C $TEST_PROJECTS_EXTERNAL pull origin $AUTOTEST_VERSION --allow-unrelated-histories
#           #rm -rf $TEST_PROJECTS_EXTERNAL/extensions/automation-framework
#          # unzip -oq $CCTEST_PLUGINS/*.zip -d $TEST_PROJECTS_EXTERNAL/extensions/automation-framework

      - name: Run test cases
        timeout-minutes: 90
        id: run_test_cases
        run: |
          JOBID=`cat  /Users/yonghu/prtest/nowJobId.log`
          cd ..
          python3 -u ./python/main.py --target=job_result --jobid=$JOBID
      - name: Update Comment
        uses: peter-evans/create-or-update-comment@v1
        with:
          body: |
             Please check the result of `run test cases`:
            - Test Platform: PR-Test
            - Editor Version: ${{ steps.run_test_cases.outputs.editor }}
            - Task Result URL: http://cctest.cocos.org/#/reportview/PR-TEST/$JOBID/-1
            - GitHub Action: https://github.com/cocos/cocos-engine/actions/runs/${{ github.run_id }}
            ## Task Details
            ${{ steps.run_test_cases.outputs.report }}





  

# Creator-PR-RunTestCases:
#     runs-on: self-hosted-mac
#     needs: [macOS-RunTestCases, Win-RunTestCases]
#     steps:
#       - name: Run test cases
#         timeout-minutes: 90
#         id: run_test_cases
#         run: |
#           cd ..
#           python3 -u ./python/main.py --workspace ${{github.workspace}} --pr_number ${{ steps.get_pr.outputs.pr_number }} --author ${{ steps.parse_pr.outputs.pr_author }}  --base_ref ${{ steps.parse_pr.outputs.pr_base_ref }}  --base_sha  ${{ steps.parse_pr.outputs.pr_base_sha }}  --head_ref  ${{ steps.parse_pr.outputs.pr_head_ref }} --head_sha ${{ steps.parse_pr.outputs.pr_head_sha }}


#       - name: Checkout
#         uses: actions/checkout@v3
#         with:
#           repository: cocos-robot/cocos-editor
#           ref: ${{ steps.get_branch.outputs.submit_branch }}
#           fetch-depth: 0
#           token: ${{ secrets.PR_TOKEN }}


#       - name: Update Comment
#         uses: peter-evans/create-or-update-comment@v1
#         with:
#           issue-number: ${{ steps.get_pr.outputs.pr_number }}
#           body: |
#             @${{ steps.parse_pr.outputs.pr_author }}, Please check the result of `run test cases`:
#             - Test Platform: macOS
#             - Editor Version: ${{ steps.run_test_cases.outputs.editor }}
#             - Task Result: ${{ steps.run_test_cases.outputs.task }}
#             - Task URL: ${{ steps.run_test_cases.outputs.url }}
#             - GitHub Action: https://github.com/cocos/cocos-engine/actions/runs/${{ github.run_id }}
#             ## Task Details
#             ${{ steps.run_test_cases.outputs.report }}
